temp2 <- sample(c(1, -1),1,replace=T, prob = c(0.5, 0.5))
if(beeMat[i,j]==1){
beeMat[i,j] <- 0
beeMat[i+temp1,j+temp2] <- 1
}
if(beeMat[i,j]==2){
beeMat[i,j] <- 0
beeMat[i+temp1,j+temp2] <- 2
}
if(beeMatStatic[i,j]==c(3,4,5)){
beeMat[i,j] <- beeMatStatic[i,j]
}
}
}
name <- rename(t)
png(name)
image(1:nrow(beeMat), 1:ncol(beeMat), as.matrix(beeMat), col=cols, asp=1, xaxt='n', yaxt='n', ann=FALSE, bty='n')
dev.off()
}
#run ImageMagick
my_command <- 'convert *.png -delay 3 -loop 0 animation.gif'
system(my_command)
warnings()
xDim <- 50
yDim <- 50
TimeSteps <- 50
cols <- c(
'0' = "white",
'1' = "yellow",
'2' = "orange",
'3' = "black",
'4' = "grey",
'5' = "red"
)
beeVec <-sample(0:5,xDim*yDim,replace=T, prob = c(0.9, 0.02, 0.02, 0.02, 0.02, 0.02))
beeMat <- matrix(data = beeVec, nrow = yDim, ncol = xDim)
buff <- integer(xDim)
buff2 <- integer(xDim+2)
beeMat <- rbind(buff, beeMat, buff)
beeMat <- cbind(buff2, beeMat, buff2)
beeMatStatic <- beeMat
# function for creating file name with leading zeros
# makes it easier to process them sequentially
rename <- function(x){
if (x < 10) {
return(name <- paste('000',t,'plot.png',sep=''))
}
if (x < 100 && i >= 10) {
return(name <- paste('00',t,'plot.png', sep=''))
}
if (x >= 100) {
return(name <- paste('0', t,'plot.png', sep=''))
}
}
for (t in 1:TimeSteps){
for (i in 2:xDim+1){
for (j in 2:yDim+1){
temp1 <- sample(c(1, -1),1,replace=T, prob = c(0.5, 0.5))
temp2 <- sample(c(1, -1),1,replace=T, prob = c(0.5, 0.5))
if(beeMat[i,j]==1){
beeMat[i,j] <- 0
beeMat[i+temp1,j+temp2] <- 1
}
if(beeMat[i,j]==2){
beeMat[i,j] <- 0
beeMat[i+temp1,j+temp2] <- 2
}
if(beeMatStatic[i,j]== 3 | 4 | 5 ){
beeMat[i,j] <- beeMatStatic[i,j]
}
}
}
name <- rename(t)
png(name)
image(1:nrow(beeMat), 1:ncol(beeMat), as.matrix(beeMat), col=cols, asp=1, xaxt='n', yaxt='n', ann=FALSE, bty='n')
dev.off()
}
#run ImageMagick
my_command <- 'convert *.png -delay 3 -loop 0 animation.gif'
system(my_command)
xDim <- 50
yDim <- 50
TimeSteps <- 50
cols <- c(
'0' = "white",
'1' = "yellow",
'2' = "orange",
'3' = "black",
'4' = "grey",
'5' = "red"
)
beeVec <-sample(0:5,xDim*yDim,replace=T, prob = c(0.9, 0.02, 0.02, 0.02, 0.02, 0.02))
beeMat <- matrix(data = beeVec, nrow = yDim, ncol = xDim)
buff <- integer(xDim)
buff2 <- integer(xDim+2)
beeMat <- rbind(buff, beeMat, buff)
beeMat <- cbind(buff2, beeMat, buff2)
beeMatStatic <- beeMat
# function for creating file name with leading zeros
# makes it easier to process them sequentially
rename <- function(x){
if (x < 10) {
return(name <- paste('000',t,'plot.png',sep=''))
}
if (x < 100 && i >= 10) {
return(name <- paste('00',t,'plot.png', sep=''))
}
if (x >= 100) {
return(name <- paste('0', t,'plot.png', sep=''))
}
}
for (t in 1:TimeSteps){
for (i in 2:xDim+1){
for (j in 2:yDim+1){
temp1 <- sample(c(1, -1),1,replace=T, prob = c(0.5, 0.5))
temp2 <- sample(c(1, -1),1,replace=T, prob = c(0.5, 0.5))
if(beeMat[i,j]==1){
beeMat[i,j] <- 0
beeMat[i+temp1,j+temp2] <- 1
}
if(beeMat[i,j]==2){
beeMat[i,j] <- 0
beeMat[i+temp1,j+temp2] <- 2
}
if(beeMatStatic[i,j] == 3 || beeMatStatic[i,j] == 4 || beeMatStatic[i,j] == 5 ){
beeMat[i,j] <- beeMatStatic[i,j]
}
}
}
name <- rename(t)
png(name)
image(1:nrow(beeMat), 1:ncol(beeMat), as.matrix(beeMat), col=cols, asp=1, xaxt='n', yaxt='n', ann=FALSE, bty='n')
dev.off()
}
#run ImageMagick
my_command <- 'convert *.png -delay 3 -loop 0 animation.gif'
system(my_command)
flowerDuration <- 10
3 %% 2
3 %% 3
3 %% 1
3 %% 1.5
#Preliminaries:
# Clear memoxry of characters
ls()
rm(list=ls())
# Paramters:
xDim <- 50
yDim <- 50
TimeSteps <- 50
flowerDuration <- 10
cols <- c(
'0' = "white", # empty space
'1' = "yellow", # honeybees
'2' = "orange", # bumblebees
'3' = "black", # honeybee colonies
'4' = "grey", # bumblebee colonies
'5' = "red" # flowers
)
beeVec <-sample(0:5,xDim*yDim,replace=T, prob = c(0.9, 0.02, 0.02, 0.02, 0.02, 0.02))
beeMat <- matrix(data = beeVec, nrow = yDim, ncol = xDim)
buff <- integer(xDim)
buff2 <- integer(xDim+2)
beeMat <- rbind(buff, beeMat, buff)
beeMat <- cbind(buff2, beeMat, buff2)
beeMatStatic <- beeMat
# function for creating file name with leading zeros
# makes it easier to process them sequentially
rename <- function(x){
if (x < 10) {
return(name <- paste('000',t,'plot.png',sep=''))
}
if (x < 100 && i >= 10) {
return(name <- paste('00',t,'plot.png', sep=''))
}
if (x >= 100) {
return(name <- paste('0', t,'plot.png', sep=''))
}
}
for (t in 1:TimeSteps){
for (i in 2:xDim+1){
for (j in 2:yDim+1){
temp1 <- sample(c(1, -1),1,replace=T, prob = c(0.5, 0.5))
temp2 <- sample(c(1, -1),1,replace=T, prob = c(0.5, 0.5))
if(beeMat[i,j]==1){
beeMat[i,j] <- 0
beeMat[i+temp1,j+temp2] <- 1
}
if(beeMat[i,j]==2){
beeMat[i,j] <- 0
beeMat[i+temp1,j+temp2] <- 2
}
if(beeMatStatic[i,j] == 3 || beeMatStatic[i,j] == 4 || beeMatStatic[i,j] == 5 ){
beeMat[i,j] <- beeMatStatic[i,j]
}
if(beeMat[i,j]==5){
if(t %% flowerDuration == 0){
beeMat[i,j] <- 0
beeMat[round(runif(1, min=2, max=100)),] <- 5
}
}
}
}
name <- rename(t)
png(name)
image(1:nrow(beeMat), 1:ncol(beeMat), as.matrix(beeMat), col=cols, asp=1, xaxt='n', yaxt='n', ann=FALSE, bty='n')
dev.off()
}
#run ImageMagick
my_command <- 'convert *.png -delay 3 -loop 0 animation.gif'
system(my_command)
#Preliminaries:
# Clear memoxry of characters
ls()
rm(list=ls())
# Paramters:
xDim <- 50
yDim <- 50
TimeSteps <- 50
flowerDuration <- 10
cols <- c(
'0' = "white", # empty space
'1' = "yellow", # honeybees
'2' = "orange", # bumblebees
'3' = "black", # honeybee colonies
'4' = "grey", # bumblebee colonies
'5' = "red" # flowers
)
beeVec <-sample(0:5,xDim*yDim,replace=T, prob = c(0.9, 0.02, 0.02, 0.02, 0.02, 0.02))
beeMat <- matrix(data = beeVec, nrow = yDim, ncol = xDim)
buff <- integer(xDim)
buff2 <- integer(xDim+2)
beeMat <- rbind(buff, beeMat, buff)
beeMat <- cbind(buff2, beeMat, buff2)
beeMatStatic <- beeMat
# function for creating file name with leading zeros
# makes it easier to process them sequentially
rename <- function(x){
if (x < 10) {
return(name <- paste('000',t,'plot.png',sep=''))
}
if (x < 100 && i >= 10) {
return(name <- paste('00',t,'plot.png', sep=''))
}
if (x >= 100) {
return(name <- paste('0', t,'plot.png', sep=''))
}
}
for (t in 1:TimeSteps){
for (i in 2:xDim+1){
for (j in 2:yDim+1){
temp1 <- sample(c(1, -1),1,replace=T, prob = c(0.5, 0.5))
temp2 <- sample(c(1, -1),1,replace=T, prob = c(0.5, 0.5))
if(beeMat[i,j]==1){
beeMat[i,j] <- 0
beeMat[i+temp1,j+temp2] <- 1
}
if(beeMat[i,j]==2){
beeMat[i,j] <- 0
beeMat[i+temp1,j+temp2] <- 2
}
if(beeMatStatic[i,j] == 3 || beeMatStatic[i,j] == 4 || beeMatStatic[i,j] == 5 ){
beeMat[i,j] <- beeMatStatic[i,j]
}
if(beeMat[i,j]==5){
if(t %% flowerDuration == 0){
beeMat[i,j] <- 0
beeMat[round(runif(1, min=2, max=99)),] <- 5
}
}
}
}
name <- rename(t)
png(name)
image(1:nrow(beeMat), 1:ncol(beeMat), as.matrix(beeMat), col=cols, asp=1, xaxt='n', yaxt='n', ann=FALSE, bty='n')
dev.off()
}
#run ImageMagick
my_command <- 'convert *.png -delay 3 -loop 0 animation.gif'
system(my_command)
#Preliminaries:
# Clear memoxry of characters
ls()
rm(list=ls())
# Paramters:
xDim <- 50
yDim <- 50
TimeSteps <- 50
flowerDuration <- 10
cols <- c(
'0' = "white", # empty space
'1' = "yellow", # honeybees
'2' = "orange", # bumblebees
'3' = "black", # honeybee colonies
'4' = "grey", # bumblebee colonies
'5' = "red" # flowers
)
beeVec <-sample(0:5,xDim*yDim,replace=T, prob = c(0.9, 0.02, 0.02, 0.02, 0.02, 0.02))
beeMat <- matrix(data = beeVec, nrow = yDim, ncol = xDim)
buff <- integer(xDim)
buff2 <- integer(xDim+2)
beeMat <- rbind(buff, beeMat, buff)
beeMat <- cbind(buff2, beeMat, buff2)
beeMatStatic <- beeMat
# function for creating file name with leading zeros
# makes it easier to process them sequentially
rename <- function(x){
if (x < 10) {
return(name <- paste('000',t,'plot.png',sep=''))
}
if (x < 100 && i >= 10) {
return(name <- paste('00',t,'plot.png', sep=''))
}
if (x >= 100) {
return(name <- paste('0', t,'plot.png', sep=''))
}
}
for (t in 1:TimeSteps){
for (i in 2:xDim+1){
for (j in 2:yDim+1){
temp1 <- sample(c(1, -1),1,replace=T, prob = c(0.5, 0.5))
temp2 <- sample(c(1, -1),1,replace=T, prob = c(0.5, 0.5))
if(beeMat[i,j]==1){
beeMat[i,j] <- 0
beeMat[i+temp1,j+temp2] <- 1
}
if(beeMat[i,j]==2){
beeMat[i,j] <- 0
beeMat[i+temp1,j+temp2] <- 2
}
if(beeMatStatic[i,j] == 3 || beeMatStatic[i,j] == 4 || beeMatStatic[i,j] == 5 ){
beeMat[i,j] <- beeMatStatic[i,j]
}
if(beeMat[i,j]==5){
if(t %% flowerDuration == 0){
beeMat[i,j] <- 0
beeMat[round(runif(1, min=2, max=yDim)), round(runif(1, min=2, max=yDim))] <- 5
}
}
}
}
name <- rename(t)
png(name)
image(1:nrow(beeMat), 1:ncol(beeMat), as.matrix(beeMat), col=cols, asp=1, xaxt='n', yaxt='n', ann=FALSE, bty='n')
dev.off()
}
#run ImageMagick
my_command <- 'convert *.png -delay 3 -loop 0 animation.gif'
system(my_command)
str(beeMat)
as.matrix(beeMat)
ls
getwd()
setwd()
getwd(/Users/phillipburnham/Dissertation/)
setwd(/Users/phillipburnham/Dissertation/)
setwd(/Users/phillipburnham/Dissertation)
setwd(Users/phillipburnham/Dissertation)
setwd("~/Dissertation/PlantTransTwo")
setwd(Users/phillipburnham/Dissertation)
setwd(Users/phillipburnham/Dissertation)saf
getwd()
#Preliminaries:
# Clear memoxry of characters
ls()
rm(list=ls())
setwd(Users/phillipburnham/Dissertation)
# Paramters:
xDim <- 50
yDim <- 50
TimeSteps <- 50
flowerDuration <- 10
cols <- c(
'0' = "white", # empty space
'1' = "yellow", # honeybees
'2' = "orange", # bumblebees
'3' = "black", # honeybee colonies
'4' = "grey", # bumblebee colonies
'5' = "red" # flowers
)
beeVec <-sample(0:5,xDim*yDim,replace=T, prob = c(0.9, 0.02, 0.02, 0.02, 0.02, 0.02))
beeMat <- matrix(data = beeVec, nrow = yDim, ncol = xDim)
buff <- integer(xDim)
buff2 <- integer(xDim+2)
beeMat <- rbind(buff, beeMat, buff)
beeMat <- cbind(buff2, beeMat, buff2)
beeMatStatic <- beeMat
# function for creating file name with leading zeros
# makes it easier to process them sequentially
rename <- function(x){
if (x < 10) {
return(name <- paste('000',t,'plot.png',sep=''))
}
if (x < 100 && i >= 10) {
return(name <- paste('00',t,'plot.png', sep=''))
}
if (x >= 100) {
return(name <- paste('0', t,'plot.png', sep=''))
}
}
for (t in 1:TimeSteps){
for (i in 2:xDim+1){
for (j in 2:yDim+1){
temp1 <- sample(c(1, -1),1,replace=T, prob = c(0.5, 0.5))
temp2 <- sample(c(1, -1),1,replace=T, prob = c(0.5, 0.5))
if(beeMat[i,j]==1){
beeMat[i,j] <- 0
beeMat[i+temp1,j+temp2] <- 1
}
if(beeMat[i,j]==2){
beeMat[i,j] <- 0
beeMat[i+temp1,j+temp2] <- 2
}
if(beeMatStatic[i,j] == 3 || beeMatStatic[i,j] == 4 || beeMatStatic[i,j] == 5 ){
beeMat[i,j] <- beeMatStatic[i,j]
}
if(beeMat[i,j]==5){
if(t %% flowerDuration == 0){
beeMat[i,j] <- 0
beeMat[round(runif(1, min=2, max=yDim)), round(runif(1, min=2, max=yDim))] <- 5
}
}
}
}
name <- rename(t)
png(name)
image(1:nrow(beeMat), 1:ncol(beeMat), as.matrix(beeMat), col=cols, asp=1, xaxt='n', yaxt='n', ann=FALSE, bty='n')
dev.off()
}
#run ImageMagick
my_command <- 'convert *.png -delay 3 -loop 0 animation.gif'
system(my_command)
#Preliminaries:
# Clear memoxry of characters
ls()
rm(list=ls())
setwd(Users/phillipburnham/Dissertation)
# Paramters:
xDim <- 50
yDim <- 50
#Preliminaries:
# Clear memoxry of characters
ls()
rm(list=ls())
setwd(Users/phillipburnham/Dissertation)
setwd(~Users/phillipburnham/Dissertation)
setwd("~Users/phillipburnham/Dissertation")
# Paramters:
xDim <- 50
yDim <- 50
TimeSteps <- 50
flowerDuration <- 10
cols <- c(
'0' = "white", # empty space
'1' = "yellow", # honeybees
'2' = "orange", # bumblebees
'3' = "black", # honeybee colonies
'4' = "grey", # bumblebee colonies
'5' = "red" # flowers
)
beeVec <-sample(0:5,xDim*yDim,replace=T, prob = c(0.9, 0.02, 0.02, 0.02, 0.02, 0.02))
beeMat <- matrix(data = beeVec, nrow = yDim, ncol = xDim)
buff <- integer(xDim)
buff2 <- integer(xDim+2)
beeMat <- rbind(buff, beeMat, buff)
beeMat <- cbind(buff2, beeMat, buff2)
beeMatStatic <- beeMat
# function for creating file name with leading zeros
# makes it easier to process them sequentially
rename <- function(x){
if (x < 10) {
return(name <- paste('000',t,'plot.png',sep=''))
}
if (x < 100 && i >= 10) {
return(name <- paste('00',t,'plot.png', sep=''))
}
if (x >= 100) {
return(name <- paste('0', t,'plot.png', sep=''))
}
}
for (t in 1:TimeSteps){
for (i in 2:xDim+1){
for (j in 2:yDim+1){
temp1 <- sample(c(1, -1),1,replace=T, prob = c(0.5, 0.5))
temp2 <- sample(c(1, -1),1,replace=T, prob = c(0.5, 0.5))
if(beeMat[i,j]==1){
beeMat[i,j] <- 0
beeMat[i+temp1,j+temp2] <- 1
}
if(beeMat[i,j]==2){
beeMat[i,j] <- 0
beeMat[i+temp1,j+temp2] <- 2
}
if(beeMatStatic[i,j] == 3 || beeMatStatic[i,j] == 4 || beeMatStatic[i,j] == 5 ){
beeMat[i,j] <- beeMatStatic[i,j]
}
if(t %% flowerDuration == 0){
if(beeMat[i,j]==5){
beeMat[i,j] <- 0
beeMat[round(runif(1, min=2, max=yDim)), round(runif(1, min=2, max=yDim))] <- 5
}
}
}
}
name <- rename(t)
png(name)
image(1:nrow(beeMat), 1:ncol(beeMat), as.matrix(beeMat), col=cols, asp=1, xaxt='n', yaxt='n', ann=FALSE, bty='n')
dev.off()
}
#run ImageMagick
my_command <- 'convert *.png -delay 3 -loop 0 animation.gif'
system(my_command)
